# PHP CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-php/
version: 2.1

 
orbs:
  codecov: codecov/codecov@3.2.4

  

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/php:7.4
    steps:
      - checkout
      - run: php --version

      # - run: sudo pecl install pcov
      # - run:  sudo docker-php-ext-enable pcov
   
      
      

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

     # prepare the database
      # - run: touch storage/testing.sqlite
      # - run: php artisan migrate --env=testing --database=sqlite_testing --force
    
    
      # run tests with phpunit or codecept
      - run:
         name: install phpunit
         command: |
            curl -LO https://phar.phpunit.de/phpunit-9.5.phar
             chmod +x phpunit-9.5.phar
             ./phpunit-9.5.phar --version
      
   
      - run:
         name: code coverage
         command: |
           mkdir htmlcov
           export XDEBUG_MODE=coverage 
           phpunit --coverage-clover clover.xml tests/

           # phpunit --coverage-html htmlcov/coverage.html
           # phpunit --coverage-html coverage.xml


      - run:
         name: prep upload cov 
         command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov 
            chmod +x codecov
            ./codecov -t ${CODECOV_TOKEN}
            
     